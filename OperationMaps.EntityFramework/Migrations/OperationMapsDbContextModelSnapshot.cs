// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OperationMaps.EntityFramework;

#nullable disable

namespace OperationMaps.EntityFramework.Migrations
{
    [DbContext(typeof(OperationMapsDbContext))]
    partial class OperationMapsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("OperationMaps.Domain.Models.Capacitor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("AcCurrent")
                        .HasColumnType("REAL");

                    b.Property<double>("AcVoltage")
                        .HasColumnType("REAL");

                    b.Property<int>("AmbientTemperature")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChargingTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("DcVoltage")
                        .HasColumnType("REAL");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("DischargeCurrent")
                        .HasColumnType("REAL");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ImpulseDuration")
                        .HasColumnType("REAL");

                    b.Property<double>("ImpulseVoltage")
                        .HasColumnType("REAL");

                    b.Property<double>("Maxfrequency")
                        .HasColumnType("REAL");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ReactivePower")
                        .HasColumnType("REAL");

                    b.Property<double>("SumVoltage")
                        .HasColumnType("REAL");

                    b.Property<double>("SuperHeatTemperature")
                        .HasColumnType("REAL");

                    b.Property<double>("ThroughCurrent")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Capacitors");
                });

            modelBuilder.Entity("OperationMaps.Domain.Models.Form4Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Dew")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FrequencyRange")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HighPressure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HighTemperature")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("HumidityCelcius")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("HumidityPercent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InListTTZ")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastEditions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("LifeTimeYears")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LineAcceleration")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LowPressure")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LowTemperature")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ResourceHours")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SoundPressure")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpecialFactors")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Form4Items");
                });
#pragma warning restore 612, 618
        }
    }
}
